// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package pkg

import (
	"github.com/WildEgor/fibergo-microservice-boilerplate/internal/config"
	"github.com/WildEgor/fibergo-microservice-boilerplate/internal/handlers/errors"
	"github.com/WildEgor/fibergo-microservice-boilerplate/internal/handlers/health-check"
	"github.com/WildEgor/fibergo-microservice-boilerplate/internal/handlers/readness-check"
	"github.com/WildEgor/fibergo-microservice-boilerplate/internal/router"
	"github.com/google/wire"
)

// Injectors from server.go:

func NewServer() (*Server, error) {
	configurator := config.NewConfigurator()
	appConfig := config.NewAppConfig(configurator)
	privateRouter := router.NewPrivateRouter()
	healthCheckHandler := health_check_handler.NewHealthCheckHandler()
	readyCheckHandler := ready_check_handler.NewReadCheckHandler()
	publicRouter := router.NewPublicRouter(healthCheckHandler, readyCheckHandler)
	swaggerRouter := router.NewSwaggerRouter()
	errorsHandler := error_handler.NewErrorsHandler()
	server := NewApp(appConfig, privateRouter, publicRouter, swaggerRouter, errorsHandler)
	return server, nil
}

// server.go:

var ServerSet = wire.NewSet(AppSet)
